defaults: &default
  docker:
    - image: circleci/node:13.8.0

version: 2.1
commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      # Add parameter here   
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            # Your code here
            exit 1

  revert-migrations:
    description: Revert the last migration if successfully run in the current workflow.
    parameters:
      # Add parameter here     
    steps:
      - run:
          name: Revert migrations
          # Add when this will run
          command: |
            # Curl command here to see if there was a successful migration associated with the workflow id, store result in SUCCESS variable
            SUCCESS = 1
            if(( $SUCCESS==1 )); 
            then
            #  cd ~/project/backend
            #  npm install
            #  Add revert code here. You can find this in the Getting Started section.
              exit 1
            fi

  build-target:
    description: Build the environment.
    parameters:
      module:
        type: string
        default: frontend
      target:
        type: string
        default: build
    steps:
      - checkout
      - restore_cache:
          keys: [<< parameters.module >>-build]
      - run:
          command: |
            cd << parameters.module >>
            npm i
            npm run << parameters.target >>
      - save_cache:
          paths: [<< parameter.module >>/node_modules]
          key: << parameter.module >>-build

jobs:
  build-frontend:
    <<: *default
    steps:
      - build-target:
          module: "frontend"
          target: "build"

  build-backend:
    <<: *default
    steps:
      - build-target:
          module: "backend"
          target: "build"

  test-frontend:
    <<: *default
    steps:
      - build-target:
          module: "frontend"
          target: "test"
                
  test-backend:
    <<: *default
    steps:
      - build-target:
          module: "backend"
          target: "test"


workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]